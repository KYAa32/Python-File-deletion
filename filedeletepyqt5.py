# Form implementation generated from reading ui file 'filedelete.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox
import os
file_path = None

class Ui_ui(QtWidgets.QMainWindow):
    
    
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        
    
    def setupUi(self, ui):
        ui.setObjectName("ui")
        ui.resize(441, 142)
        ui.setMinimumSize(QtCore.QSize(441, 142))
        ui.setMaximumSize(QtCore.QSize(441, 142))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(9)
        ui.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=ui)
        self.centralwidget.setObjectName("centralwidget")
        self.lujing = QtWidgets.QPushButton(parent=self.centralwidget)
        self.lujing.setGeometry(QtCore.QRect(370, 60, 51, 23))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(9)
        self.lujing.setFont(font)
        self.lujing.setObjectName("lujing")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 261, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(32)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(62, 60, 301, 21))
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 60, 40, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.all = QtWidgets.QPushButton(parent=self.centralwidget)
        self.all.setGeometry(QtCore.QRect(350, 90, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(9)
        self.all.setFont(font)
        self.all.setObjectName("all")
        self.start_delete = QtWidgets.QPushButton(parent=self.centralwidget)
        self.start_delete.setGeometry(QtCore.QRect(270, 90, 71, 31))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(9)
        self.start_delete.setFont(font)
        self.start_delete.setObjectName("start_delete")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(190, 30, 201, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(2, 106, 201, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(8)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        ui.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=ui)
        self.statusbar.setObjectName("statusbar")
        ui.setStatusBar(self.statusbar)
        self.lujing.clicked.connect(self.file_path)
        self.lineEdit.textChanged.connect(self.onTextChanged)
        self.all.clicked.connect(self.cancel)
        self.start_delete.clicked.connect(self.delete_file)

        self.retranslateUi(ui)
        QtCore.QMetaObject.connectSlotsByName(ui)

    def retranslateUi(self, ui):
        _translate = QtCore.QCoreApplication.translate
        ui.setWindowTitle(_translate("ui", "WAG-文件删除"))
        self.lujing.setText(_translate("ui", "选择"))
        self.label.setText(_translate("ui", "文件删除"))
        self.label_3.setText(_translate("ui", "路径"))
        self.all.setText(_translate("ui", "取消"))
        self.start_delete.setText(_translate("ui", "开始删除"))
        self.label_4.setText(_translate("ui", "目前仅支持文件删除"))
        self.label_5.setText(_translate("ui", "版本 v 0.5"))
    
    def onTextChanged(self, text):  
        global file_path  # 使用全局变量  
        file_path = text  # 更新全局变量

    
    def file_path(self):
        global file_path
        file_dialog = QFileDialog(self)
        file_dialog.setWindowTitle("Select a File")
        file_dialog.setFileMode(QFileDialog.FileMode.ExistingFile)
 
        # 显示文件选择对话框并获取选择的文件路径
        file_path, _ = file_dialog.getOpenFileName()
        self.lineEdit.setText(file_path)    
    
    def delete_file(self): 
     global file_path
     msg = QMessageBox()
     try:  
       if os.path.isfile(file_path):
        msg.setWindowTitle("确认")  
        msg.setText("您确定要删除吗？\n此操作不可逆")  
        msg.setStandardButtons(QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
        reply = msg.exec()  
        if reply == QMessageBox.StandardButton.Yes: 
         print("结束进程")  
         os.system("taskkill /f /t /im " + os.path.basename(file_path))
         os.chmod(file_path, 0o666)  # 0o666表示所有用户都有读写权限
         f = open(file_path, 'w')
         f.write("000")
         f.close()
         print("删除")
         os.remove(file_path)
         msg = QMessageBox()  
         msg.setWindowTitle("成功")  
         msg.setText("删除成功！")  
         msg.setStandardButtons(QMessageBox.StandardButton.Ok)  
         msg.exec()
         self.lineEdit.clear()
        else:
          print("No")
       else:
          
        msg.setIcon(QMessageBox.Icon.Critical)  
        msg.setText("发生错误")  
        msg.setInformativeText("这不是一个有效的文件路径")  
        msg.setWindowTitle("错误")  
        # 显示错误弹窗  
        msg.exec() 
     
     except OSError as e:  
      print(f'An error occurred: {e.strerror}')

    def cancel(self):
       global file_path
       file_path = None
       self.lineEdit.setText(file_path)
       self.lineEdit.clear()
    



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = QtWidgets.QMainWindow()
    ui = Ui_ui()
    ui.setupUi(ui)
    ui.show()
    sys.exit(app.exec())
